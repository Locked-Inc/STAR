/dts-v1/;

/ {
    model = "PYNQ-Z2 Robot System";
    compatible = "digilent,zynq-pynqz2", "xlnx,zynq-7000";

    #address-cells = <1>;
    #size-cells = <1>;

    memory@0 {
        device_type = "memory";
        reg = <0x0 0x20000000>; /* 512MB */
    };

    chosen {
        bootargs = "console=ttyPS0,115200 root=/dev/mmcblk0p2 rw earlyprintk rootfstype=ext4 rootwait";
    };

    aliases {
        ethernet0 = &gem0;
        serial0 = &uart1;
        spi0 = &spi0;
        spi1 = &spi1;
        mmc0 = &sdhci0;
    };

    /* CPU and basic system */
    cpus {
        #address-cells = <1>;
        #size-cells = <0>;

        cpu@0 {
            compatible = "arm,cortex-a9";
            device_type = "cpu";
            reg = <0>;
            clocks = <&clkc 3>;
            clock-latency = <1000>;
            operating-points = <
                /* kHz    uV */
                666667  1000000
                333334  1000000
            >;
        };

        cpu@1 {
            compatible = "arm,cortex-a9";
            device_type = "cpu";
            reg = <1>;
            clocks = <&clkc 3>;
        };
    };

    /* FPGA Manager for bitstream loading */
    fpga_manager: fpga-manager {
        compatible = "xlnx,zynq-devcfg-1.0";
        reg = <0xf8007000 0x100>;
        interrupt-parent = <&intc>;
        interrupts = <0 8 4>;
        clocks = <&clkc 12>;
        clock-names = "ref_clk";
        syscon = <&slcr>;
    };

    /* Robot-specific GPIO definitions */
    robot_gpio: robot-gpio {
        compatible = "gpio-leds";
        
        status_led {
            label = "robot:status";
            gpios = <&gpio0 7 1>; /* Active low */
            default-state = "off";
        };

        error_led {
            label = "robot:error";
            gpios = <&gpio0 0 1>; /* Active low */
            default-state = "off";
        };
    };

    /* LiDAR interface configuration */
    lidar {
        compatible = "robot,lidar-interface";
        status = "okay";
        
        /* UART interface for LiDAR communication */
        uart-interface = <&uart0>;
        
        /* GPIO for LiDAR control */
        enable-gpios = <&gpio0 54 0>; /* Active high */
        reset-gpios = <&gpio0 55 1>;  /* Active low */
        
        /* Power management */
        power-supply = <&reg_5v0>;
        
        /* Operating parameters */
        scan-frequency = <10>; /* Hz */
        max-range = <12000>;   /* mm */
        min-range = <150>;     /* mm */
    };

    /* Stereo camera configuration */
    stereo_cameras {
        compatible = "robot,stereo-camera";
        status = "okay";
        
        left_camera {
            compatible = "usb-camera";
            device-path = "/dev/video0";
            resolution = "1280x720";
            framerate = <30>;
            format = "YUYV";
        };
        
        right_camera {
            compatible = "usb-camera";
            device-path = "/dev/video1";
            resolution = "1280x720";
            framerate = <30>;
            format = "YUYV";
        };
        
        /* Stereo calibration parameters */
        baseline = <120>; /* mm */
        focal-length = <800>; /* pixels */
    };

    /* IMU sensor configuration */
    imu {
        compatible = "robot,imu-sensor";
        status = "okay";
        
        /* I2C interface */
        i2c-interface = <&i2c0>;
        i2c-address = <0x68>;
        
        /* Interrupt GPIO */
        interrupt-gpios = <&gpio0 56 0>; /* Active high */
        
        /* Sensor parameters */
        sample-rate = <100>; /* Hz */
        gyro-range = <2000>; /* dps */
        accel-range = <16>;  /* g */
    };

    /* Robot motor control interface */
    motor_controller {
        compatible = "robot,motor-controller";
        status = "okay";
        
        /* PWM interfaces for motor control */
        left-motor-pwm = <&pwm0 0>;
        right-motor-pwm = <&pwm0 1>;
        
        /* GPIO for motor direction control */
        left-dir-gpios = <&gpio0 57 0>, <&gpio0 58 0>;
        right-dir-gpios = <&gpio0 59 0>, <&gpio0 60 0>;
        
        /* Encoder inputs */
        left-encoder = <&gpio0 61>, <&gpio0 62>;
        right-encoder = <&gpio0 63>, <&gpio0 64>;
        
        /* Motor parameters */
        max-speed = <2000>; /* mm/s */
        wheel-diameter = <65>; /* mm */
        wheel-base = <150>; /* mm */
    };

    /* Power management */
    regulators {
        compatible = "simple-bus";
        #address-cells = <1>;
        #size-cells = <0>;

        reg_5v0: regulator@0 {
            compatible = "regulator-fixed";
            reg = <0>;
            regulator-name = "5V0";
            regulator-min-microvolt = <5000000>;
            regulator-max-microvolt = <5000000>;
            regulator-always-on;
        };

        reg_3v3: regulator@1 {
            compatible = "regulator-fixed";
            reg = <1>;
            regulator-name = "3V3";
            regulator-min-microvolt = <3300000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };
    };

    /* Real-time clock */
    rtc {
        compatible = "dallas,ds1307";
        reg = <0x68>;
        status = "okay";
    };

    /* Robot-specific overlays */
    fragment@0 {
        target-path = "/";
        __overlay__ {
            robot_control: robot-control@43c00000 {
                compatible = "robot,control-ip";
                reg = <0x43c00000 0x10000>;
                interrupt-parent = <&intc>;
                interrupts = <0 29 4>;
                
                /* Custom IP parameters */
                control-frequency = <1000>; /* Hz */
                safety-timeout = <100>; /* ms */
            };
        };
    };

    /* SLAM processing overlay */
    fragment@1 {
        target-path = "/";
        __overlay__ {
            slam_accelerator: slam-accel@43c10000 {
                compatible = "robot,slam-accelerator";
                reg = <0x43c10000 0x10000>;
                interrupt-parent = <&intc>;
                interrupts = <0 30 4>;
                
                /* FPGA acceleration parameters */
                processing-cores = <4>;
                memory-bandwidth = <1000>; /* MB/s */
            };
        };
    };

    /* Computer vision accelerator */
    fragment@2 {
        target-path = "/";
        __overlay__ {
            cv_accelerator: cv-accel@43c20000 {
                compatible = "robot,cv-accelerator";
                reg = <0x43c20000 0x10000>;
                interrupt-parent = <&intc>;
                interrupts = <0 31 4>;
                
                /* OpenCV acceleration */
                pipeline-stages = <8>;
                image-formats = "RGB", "GRAY", "HSV";
            };
        };
    };
};

/* Include base PYNQ-Z2 device tree */
#include "zynq-pynqz2.dtsi"

/* Override specific configurations for robot system */
&gem0 {
    status = "okay";
    phy-mode = "rgmii-id";
    phy-handle = <&ethernet_phy>;
    
    ethernet_phy: ethernet-phy@0 {
        reg = <0>;
        device_type = "ethernet-phy";
    };
};

&sdhci0 {
    status = "okay";
    disable-wp;
    cd-gpios = <&gpio0 47 0>; /* Card detect */
};

&uart1 {
    status = "okay";
};

&uart0 {
    status = "okay";
    /* Used for LiDAR communication */
};

&i2c0 {
    status = "okay";
    clock-frequency = <400000>;
    
    /* IMU sensor */
    imu_sensor: imu@68 {
        compatible = "invensense,mpu6050";
        reg = <0x68>;
        interrupt-parent = <&gpio0>;
        interrupts = <56 4>; /* IRQ_TYPE_LEVEL_HIGH */
    };
};

&i2c1 {
    status = "okay";
    clock-frequency = <100000>;
};

&spi0 {
    status = "okay";
    num-cs = <4>;
};

&usb0 {
    status = "okay";
    dr_mode = "host";
    usb-phy = <&usb_phy0>;
};

&usb1 {
    status = "okay";
    dr_mode = "host";
    usb-phy = <&usb_phy1>;
};