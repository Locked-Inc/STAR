#@TYPE: Machine
#@NAME: PYNQ-Z2 Robot System
#@DESCRIPTION: Machine configuration for PYNQ-Z2 based robot with LiDAR SLAM and Computer Vision

# Include the generic Zynq configuration as base
include conf/machine/zynq-generic.conf

# Machine identification
MACHINEOVERRIDES =. "pynqz2:"

# Kernel and bootloader preferences
PREFERRED_PROVIDER_virtual/kernel = "linux-xlnx"
PREFERRED_PROVIDER_virtual/bootloader = "u-boot-xlnx"

# Device tree specification for PYNQ-Z2
KERNEL_DEVICETREE = " \
    zynq-pynqz2.dtb \
    zynq-pynqz2-robot.dtb \
"

# FPGA bitstream integration
EXTRA_IMAGEDEPENDS += "pynq-z2-bitstream"

# Boot configuration
UBOOT_MACHINE = "zynq_pynqz2_config"
UBOOT_ENTRYPOINT = "0x8000"
UBOOT_LOADADDRESS = "0x8000"

# Serial console configuration
SERIAL_CONSOLES = "115200;ttyPS0"

# Machine features specific to robot system
MACHINE_FEATURES = " \
    ext2 \
    ext3 \
    ext4 \
    vfat \
    ethernet \
    wifi \
    bluetooth \
    usbgadget \
    usbhost \
    screen \
    alsa \
    rtc \
    keyboard \
    touchscreen \
    usb2 \
    usb3 \
    pci \
    pcmcia \
    3g \
    nfc \
    x11 \
    opengl \
    opencl \
    camera \
    gpio \
    i2c \
    spi \
    can \
    pwm \
"

# GPU and multimedia support
MACHINE_FEATURES += "gpu mali400"

# FPGA features
MACHINE_FEATURES += "fpga-overlay"

# Camera and sensor interfaces
MACHINE_FEATURES += " \
    mipi-csi \
    stereo-camera \
    lidar \
    imu \
"

# Image format configuration
IMAGE_FSTYPES = "wic wic.gz ext4 tar.gz"

# WIC (Wic Image Creator) configuration for SD card
WKS_FILE = "pynqz2-robot-sdimage.wks"

# Preferred image size (in KB) - 8GB SD card minus some space
IMAGE_ROOTFS_MAXSIZE = "7000000"

# Extra space for user data and logs
IMAGE_ROOTFS_EXTRA_SPACE = "1000000"

# XSERVER configuration for X11 display
XSERVER = " \
    xserver-xorg \
    xf86-input-evdev \
    xf86-input-mouse \
    xf86-input-keyboard \
    xf86-video-modesetting \
"

# OpenGL support
PREFERRED_PROVIDER_virtual/libgl = "mesa"
PREFERRED_PROVIDER_virtual/mesa = "mesa"

# OpenCV configuration optimized for Zynq
OPENCV_VERSION = "4.8%"
PACKAGECONFIG:pn-opencv = " \
    eigen \
    jpeg \
    png \
    tiff \
    v4l \
    libv4l \
    gstreamer \
    opencl \
    dnn \
    freetype \
    gphoto2 \
    gstreamer \
    gtk \
    jasper \
    jpeg \
    openexr \
    png \
    python3 \
    qt5 \
    tbb \
    tiff \
    v4l \
    webp \
"

# ROS2 configuration
ROS_DISTRO = "humble"
ROS_PYTHON_VERSION = "3"

# Vitis AI configuration for ML acceleration
VITISAI_ROOT = "/opt/vitis_ai"
VITISAI_VERSION = "3.0"

# Enable systemd for modern service management
INIT_MANAGER = "systemd"

# Network configuration
PACKAGECONFIG:append:pn-wpa-supplicant = " dbus"

# Python configuration for robot development
PYTHON_PN = "python3"
PREFERRED_VERSION_python3 = "3.11%"

# Additional software configurations
PACKAGECONFIG:append:pn-opencv = " opencl python3 dnn"
PACKAGECONFIG:append:pn-gstreamer1.0 = " libav"
PACKAGECONFIG:append:pn-gstreamer1.0-plugins-good = " v4l2"

# Security configuration
PACKAGECONFIG:append:pn-openssh = " pam"

# Development tools
EXTRA_IMAGE_FEATURES += " \
    tools-debug \
    tools-profile \
    tools-testapps \
    debug-tweaks \
"

# Hardware-specific optimizations
DEFAULTTUNE = "cortexa9thf-neon"
ARM_INSTRUCTION_SET = "thumb"

# Floating point configuration
TARGET_FPU = "hard"

# Cache configuration
SSTATE_MIRRORS ?= "file://.* file:///workspace/yocto-build/sstate-cache/PATH"

# Download directory
DL_DIR ?= "/workspace/yocto-build/downloads"